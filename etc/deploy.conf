#!/bin/bash
#
# deploy.conf
#
# Global configuration file for deploy
#
#
# Clear screen on startup, when not running with --quiet switch
CLEARSCREEN="TRUE"

# Set the work path. This is the directory where all your 
# repos are stored, with no trailing slash
WORKPATH="/var/www/html"

# Path to repository configuration files relative to its 
# root directory, usually ./config
CONFIGDIR="config"

# The URL for your repository hosting, with no trailing slash. For example, 
# if you use Github and your repo URL looks like https://github.com/EMRL/deploy
# your REPOHOST should be set to https://github.com/EMRL (with no trailling slash)
REPOHOST="https://bitbucket.org/emrl"

# Path to wp-cli, with no trailing slash
WPCLI="/usr/local/bin"
 
# Activate "Smart Commits"; this feature tries to create automatic 
# commit messages by parsing the log files generated during 
# Wordpress updates. Set to "TRUE" to activate.
SMARTCOMMIT="TRUE"

# If you want to see statistics about your recent git 
# commits, set this value to exactly "TRUE"
GITSTATS="TRUE" 						

# Send log file in HTML?
LOGHTML="FALSE"

# Strips the bulk of nasty PHP debug messages out of the 
# log files that are emailed unpon deployment.
NOPHP="TRUE" 

# Activate Permission Fix. With multi-user stuff going on, sometimes
# permission problems may arise. This function will reset permissions
# upon each deploy. Set FIXPERMISSIONS to "TRUE" to activate.
# FIXPERMISSIONS="FALSE"
# DEVUSER="developer"				# Lead developer username
# DEVGROUP="users"				# Lead developer group
# APACHEUSER="apache"				# Apache user
# APACHEGROUP="apache"			# Apache group

# When ACTIVECHECK="TRUE", when running as deploy --force --update --quit 
# files will be scanned for changes made within the timeframe set in 
# ACTIVETiME (in minutes) and if any changes are found, deployment will be halted.
ACTIVECHECK="TRUE"
CHECKTIME="10"

# Set the address and subject line of 
TO="deploy@emrl.com"

# Email log subject line "- project name" is appended to this, 
# creating a subject line such as "Project deployed - Project Name"
SUBJECT="[EMRL] Deployment"		

# When should email logs be sent? Setting to TRUE to activate.
EMAILERROR="TRUE"
EMAILSUCCESS="TRUE"				
EMAILQUIT="FALSE"					

# Integration options.			
# 
# Set values for where you'd like to post commit messages to 
# via email. You can use something like Zapier to re-post that
# to whatever service you like, or if your project tracker allows
# for input directly via email like ours does, you post directly.
# Some of these options will definitely need to be set in the 
# project's .deployrc, not in a master configuration.

# Email from domain. Whatever you're integrating with may need
# a different From: address than that of the the machine you're 
# actually deploying from.
FROMDOMAIN="emrl.com"

# If you need to specify a user, other than your unix user name
# to be the in the From: email, do it here. Otherwise Leave blank.
# FROMUSER=""

# Post commit logs to this email address. This should probably 
# be set per-project. For examples, for our task management 
# system, this email would be task-####@projects.emrl.com, with 
# the #### being the task identification number for the project 
# being deployed.
POSTEMAILHEAD="task-"
POSTEMAILTAIL="@projects.emrl.com"

# Slack Integration
# 
# You'll need to set up an "Incoming Webhook" custom integration on the Slack 
# side to get this ready to roll. 
# See https://YOURTEAMNAME.slack.com/apps/manage/custom-integrations to get 
# going. Once your Slack webhook is setup, run # 'deploy --slack-test' to 
# test your configuration.
#
# Set POSTTOSLACK to "TRUE" to enable Slack integration.
POSTTOSLACK="TRUE"

# Add your full Webhook URL below, including https://
SLACKURL="https://hooks.slack.com/services/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"

# Normally only successful deployments are posted to Slack.
# Enable the settings below to post on WARNiNG and/or ERROR.
SLACKERROR="TRUE"

# Post commit logs to this URL.
# POSTURL=""
